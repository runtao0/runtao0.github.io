(()=>{"use strict";const e=class{constructor(e,t){this.rows=e,this.cols=t,this.plane=this.initPlane(),this.grid=this.initGrid()}initPlane(){const e=new THREE.PlaneBufferGeometry(10*this.rows,10*this.cols);return new THREE.Mesh(e,new THREE.MeshBasicMaterial({visible:!1,color:"#000000"}))}initGrid(){const e=new THREE.Geometry;for(let t=-500;t<=501;t+=10)e.vertices.push(new THREE.Vector3(-500,t,0)),e.vertices.push(new THREE.Vector3(500,t,0)),e.vertices.push(new THREE.Vector3(t,-500,0)),e.vertices.push(new THREE.Vector3(t,500,0));const t=new THREE.LineBasicMaterial({color:"#bdc5cd"});return new THREE.LineSegments(e,t)}},t=class{constructor(e=100,t=100){this.rows=e,this.cols=t,this.tracker=this.create()}create(){const e={};for(let t=0;t<this.rows;t++)for(let r=0;r<this.cols;r++)e[`${t},${r}`]=!1;return e}isAlive(e){return this.tracker[e]}setDead(e,t){this.tracker[`${e},${t}`]=!1}setAlive(e,t){this.tracker[`${e},${t}`]=!0}countLife(){let e=0;for(let t in this.tracker)this.tracker[t]&&e++;return e>10}random(){this.iterate(((e,t)=>{Math.floor(100*Math.random())<=12?this.setAlive(e,t):this.setDead(e,t)}))}nextStep(e){const t={};this.iterate(((r,s,i)=>{this._populationLogic(r,s,i,t,e)})),this.tracker=t}iterate(e){Object.keys(this.tracker).forEach((t=>{const r=t.split(","),s=parseInt(r[0]),i=parseInt(r[1]);e(s,i,t)}))}translatePattern(e){for(let t in e)for(let r=0;r<e.x.length;r++)newTracker[`${t},${e.x[r]}`]=!0}_populationLogic(e,t,r,s,i){const o=this._countNeighbors(e,t);this.tracker[r]?o<2?s[r]=!1:o<=3?(s[r]=!0,i(e,t)):o>3&&(s[r]=!1):o<3?s[r]=!1:3===o?(s[r]=!0,i(e,t)):s[r]=!1}_countNeighbors(e,t){const r=e-1>=0?e-1:this.cols-1,s=e+1<=this.cols-1?e+1:0,i=t-1>=0?t-1:this.rows-1,o=t+1<=this.rows-1?t+1:0,n={top_left:this.tracker[`${r},${i}`],top_center:this.tracker[`${r},${t}`],top_right:this.tracker[`${r},${o}`],left:this.tracker[`${e},${i}`],right:this.tracker[`${e},${o}`],bottom_left:this.tracker[`${s},${i}`],bottom_center:this.tracker[`${s},${t}`],bottom_right:this.tracker[`${s},${o}`]};let a=0;for(let e in n)n[e]&&a++;return a}},r=class{constructor(e=100,r=100,s=new t){this.worldWidth=10*e,this.worldHeight=10*r,this.rows=e,this.cols=r,this.multiplier=1,this.cells=[],this.lifeTracker=s,this.basicCell=new THREE.BoxBufferGeometry(10,10,10),this.normalMaterial=new THREE.MeshNormalMaterial({opacity:1,transparent:!0}),this.createBox=this.createBox.bind(this)}createBox(e,t){const r=-this.worldWidth/2+10*e+5,s=-this.worldHeight/2+10*t+5,i=5*this.multiplier,o=new THREE.BoxGeometry(10,10,10);return o.applyMatrix((new THREE.Matrix4).makeTranslation(r,s,i)),o}makeGrid(){const e=[];this.lifeTracker.iterate(((t,r,s)=>{this.lifeTracker.isAlive(s)&&e.push(new THREE.Mesh(this.createBox(t,r),this.normalMaterial))})),this.cells=e}step(e){this.multiplier=e;const t=new THREE.BoxGeometry(0,0,0);this.lifeTracker.nextStep(((e,r)=>{t.merge(this.createBox(e,r))}));const r=(new THREE.BufferGeometry).fromGeometry(t);this.cells=new THREE.Mesh(r,this.normalMaterial)}},s=class{constructor(s,i,o=new t){this.width=s,this.height=i,this.layer=1,this.scene=new THREE.Scene,this.camera=new THREE.PerspectiveCamera(41,s/i,1,1e4),this.light=new THREE.AmbientLight(16777215,1),this.renderer=new THREE.WebGLRenderer,this.mouse=new THREE.Vector2,this.raycaster=new THREE.Raycaster,this.plane=new e(100,100),this.controls=new THREE.TrackballControls(this.camera),this.grid=new r(100,100,o),this.rollOverGeo=this.grid.basicCell,this.rollOverMaterial=new THREE.MeshBasicMaterial({color:"#ffffff",opacity:.5,transparent:!0}),this.rollOverMesh=new THREE.Mesh(this.rollOverGeo,this.rollOverMaterial),this.normalMaterial=this.grid.normalMaterial}_addGeneration(){this.scene.add(this.grid.cells)}_cameraFollowGrowth(){this.camera.position.set(this.camera.position.x,this.camera.position.y+2,this.camera.position.z+7)}_createRenderer(){this.renderer.setClearColor("#9c9999",1),this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.setSize(this.width,this.height),document.body.append(this.renderer.domElement)}_addPlane(e){e.push(this.plane.plane),this.scene.add(this.plane.plane),this.scene.add(this.plane.grid)}_createRollOver(){this.scene.add(this.rollOverMesh)}_setPositions(){this.camera.position.set(0,-1e3,700),this.camera.lookAt(new THREE.Vector3(0,0,0))}_addLightToScene(){this.scene.add(this.light)}_renderControls(){this.controls.addEventListener("change",this.render.bind(this))}setUpSceneAll(e){this._createRenderer(),this._addPlane(e),this._createRollOver(),this._setPositions(),this._addLightToScene(),this._renderControls()}remove(e){this.scene.remove(e)}removeRollOver(){this.scene.remove(this.rollOverMesh)}makeGrid(){this.grid.makeGrid()}addBlocks(){for(let e=0;e<this.grid.cells.length;e++)this.scene.add(this.grid.cells[e])}render(){this.renderer.render(this.scene,this.camera)}getIntersectObjects(e){return this.raycaster.intersectObjects(e)}step(){this.grid.step(this.layer),this._cameraFollowGrowth(),this._addGeneration(),this.layer+=1}setRollOverMesh(e){this.rollOverMesh.position.copy(e),this.rollOverMesh.position.divideScalar(10).floor().multiplyScalar(10).addScalar(5),this.rollOverMesh.position.z=5,this.rollOverMesh.position.x<-500&&(this.rollOverMesh.position.x=-500),this.rollOverMesh.position.y<-500&&(this.rollOverMesh.position.y=-500)}setMouse(e,t){this.mouse.set(e,t)}setRayfromCamera(){this.raycaster.setFromCamera(this.mouse,this.camera)}clearPrevious(){this.grid.cells.forEach((e=>{this.scene.remove(e)})),this.grid.cells=[]}createBox(e=this.rollOverMesh.position.x,t=this.rollOverMesh.position.y){const r=new THREE.Mesh(this.rollOverGeo,this.normalMaterial);return r.position.set(e,t,5),this.scene.add(r),r}rollOverXPos(){return(this.rollOverMesh.position.x-5+500)/10}rollOverYPos(){return(this.rollOverMesh.position.y-5+500)/10}onWindowResize(){this.camera.aspect=window.innerWidth/window.innerHeight,this.camera.updateProjectionMatrix(),this.renderer.setSize(window.innerWidth,window.innerHeight)}},i={1:[5,6],2:[5,6],11:[5,6,7],12:[4,8],13:[3,9],14:[3,9],15:[6],16:[4,8],17:[5,6,7],18:[6],21:[3,4,5],22:[3,4,5],23:[2,6],25:[1,2,6,7],35:[3,4],36:[3,4]},o={6:[17,18,19,20,21,22,24,25],7:[17,18,20,22,23,24,25],8:[17,19,20,21,22,23,25],9:[17,18,20,22,24,25],10:[17,19,20,21,23,24,25],11:[17,18,19,21,22,23,25],12:[17,18,19,20,22,23,24,25],13:[17,18,20,21,22,24,25],14:[17,19,20,21,23,24,25],15:[17,18,19,21,22,23,25],16:[17,18,19,20,22,23,24,25],17:[17,18,20,21,22,24,25],18:[17,19,20,21,23,24,25],19:[17,18,19,21,22,23,25],20:[17,18,19,20,22,23,24,25],21:[17,19,20,21,22,24,25],22:[17,18,20,22,23,25],23:[17,19,20,21,22,24,25],24:[17,18,19,21,23,24],25:[17,19,20,21,22,24,25],26:[17,18,20,22,23,24,25],27:[17,19,20,21,23,25],28:[17,18,20,22,23,24,25],29:[17,19,20,21,23,25],30:[17,18,20,22,23,24,25],31:[17,19,20,21,23,25],32:[17,18,20,22,23,24,25],33:[17,19,20,21,23,25],34:[17,18,20,22,23,24,25],35:[17,19,20,21,23,25],36:[17,18,20,22,23,24,25],37:[17,19,20,21,23,25],38:[17,18,20,22,23,24,25]},n={1:[0,1,2,3,4,5,6,7,9,10,11,12,13,17,18,19,26,27,28,29,30,31,32,34,35,36,37,38]};function a(e,t,r){const s={};for(let i in e)i=parseInt(i),s[i+t]=[],e[i].forEach((e=>{s[i+t].push(e+r)}));return s}$((()=>{const e=new s(window.innerWidth,window.innerHeight);let r=!0,h=!1,l=!1,c=[];const d=e.grid.lifeTracker,m=new t;e.setUpSceneAll(c);const u=$(".buttons_container");function w(){e.controls.update(),requestAnimationFrame(w),l&&e.step()}function p(t){e.clearPrevious(),function(e){d.iterate(((t,r,s)=>{m.isAlive(s)||function(e,t,r){return!!(r.hasOwnProperty(e)&&r[e].indexOf(t)>-1)}(t,r,e)?d.setAlive(t,r):d.setDead(t,r)}))}(t),e.makeGrid(),e.addBlocks()}function g(){e.clearPrevious(),d.random(),e.makeGrid(),e.addBlocks()}$(document).on("mousemove",(function(t){t.preventDefault(),e.setMouse(t.clientX/window.innerWidth*2-1,-t.clientY/window.innerHeight*2+1),e.setRayfromCamera();const r=e.getIntersectObjects(c);if(r.length>0){const t=r[0];e.setRollOverMesh(t.point)}e.render()})).on("mousedown",(function(t){t.preventDefault();const r=e.rollOverXPos(),s=e.rollOverYPos();e.setMouse(t.clientX/window.innerWidth*2-1,-t.clientY/window.innerHeight*2+1),e.setRayfromCamera();const i=e.getIntersectObjects(e.grid.cells),o=e.getIntersectObjects(c),n=i.concat(o);if(n.length>0){const t=n[0];h?t.object!=e.plane.plane&&(e.remove(t.object),m.setDead(r,s),d.setDead(r,s)):(d.setAlive(r,s),m.setAlive(r,s),c.push(e.createBox())),e.render()}})).on("keydown",(function(e){16===e.keyCode&&(h=!0)})).on("keyup",(function(e){16===e.keyCode&&(h=!1)})),window.addEventListener("resize",e.onWindowResize.bind(e),!1),g(),u.on("click","button",(t=>{switch(t.preventDefault(),t.target.id){case"start_button":if(r)if(d.countLife())s=t.target,$(document).off(),$(".error").remove(),$("#glider_gun").remove(),$("#cross").remove(),$("#benchmark").remove(),$("#garden").remove(),$("#growthgun").remove(),$("#random").remove(),$("#sidebar").on("mouseenter",(()=>{$("header").animate({left:0},{duration:1e3})})).on("mouseleave",(()=>{$("header").animate({left:"-100%"},{duration:1e3})})),setTimeout((()=>{$("header").animate({opacity:"0"},{duration:2e3})}),3e3),l=!l,r=!1,s.classList.toggle("green"),s.classList.toggle("red"),s.textContent="Pause",e.removeRollOver(),w();else{const e=$("<h2>Add more blocks for life to happen!</h2>");e.addClass("error"),$("body").append(e)}else{const e=l?"Start!":"Pause!";t.target.classList.toggle("green"),t.target.classList.toggle("red"),t.target.innerHTML=e,l=!l}break;case"glider_gun":p(a(i,20,30));break;case"cross":p(function(e){e%2!=0&&(e-=1);const t=(e-6)/2,r=t+2,s=(e-6)/2+6,i=s-3,o={};for(let n=0;n<e;n++)o[n]=n<t||n>=s?[n,e-n-1]:n<r||n>i?[t,t+1,t+2,t+3,t+4,t+5]:[t,t+1,t+4,t+5];return o}(100));break;case"benchmark":p(function(e,t){const r={50:[]};for(let e=0;e<99;e++)r[50].push(e);return r}());break;case"garden":p(a(o,20,30));break;case"growthgun":p(a(n,50,30));break;case"random":g()}var s}))}))})();